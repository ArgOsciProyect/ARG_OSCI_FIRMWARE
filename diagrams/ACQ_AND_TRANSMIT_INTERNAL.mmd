sequenceDiagram
    participant Client as Client
    participant DataTrans as data_transmission.c
    participant Acquisition as acquisition.c
    
    Client->>DataTrans: Connect to data socket
    activate DataTrans
    
    DataTrans->>Acquisition: start_adc_sampling()
    activate Acquisition
    
    Note over Acquisition: Check if ADC already running
    
    alt ADC is running
        Acquisition->>Acquisition: stop_adc_sampling()
        Acquisition->>Acquisition: Wait for cleanup (500ms)
    end
    
    Acquisition->>Acquisition: Set atomic_initializing flag
    Acquisition->>Acquisition: Create ADC handle (with retries)
    Acquisition->>Acquisition: Configure ADC pattern
    Acquisition->>Acquisition: adc_continuous_config()
    Acquisition->>Acquisition: adc_continuous_start()
    Acquisition->>Acquisition: atomic_store(&adc_is_running, true)
    Acquisition->>Acquisition: atomic_store(&adc_initializing, false)
    Acquisition-->>DataTrans: ADC started
    deactivate Acquisition
    
    alt mode == 0 (Continuous)
        loop Until client disconnects
            DataTrans->>DataTrans: vTaskDelay(wait_convertion_time)
            DataTrans->>Acquisition: acquire_data() [calls adc_continuous_read()]
            activate Acquisition
            Acquisition-->>DataTrans: Data buffer
            deactivate Acquisition
            
            DataTrans->>Client: non_blocking_send() buffer
            
            opt Frequency change requested
                Note over DataTrans: adc_modify_freq == 1
                DataTrans->>Acquisition: config_adc_sampling()
                activate Acquisition
                Acquisition->>Acquisition: stop_adc_sampling()
                Acquisition->>Acquisition: Create new handle with updated frequency
                Acquisition->>Acquisition: Update wait_convertion_time
                Acquisition->>Acquisition: adc_continuous_start()
                Acquisition->>Acquisition: atomic_store(&adc_is_running, true)
                Acquisition-->>DataTrans: ADC reconfigured
                deactivate Acquisition
                DataTrans->>DataTrans: adc_modify_freq = 0
            end
            
            opt WiFi operation requested
                DataTrans->>Acquisition: stop_adc_sampling()
                DataTrans->>DataTrans: atomic_store(&wifi_operation_acknowledged, 1)
                DataTrans->>DataTrans: Wait while wifi_operation_requested == 1
                DataTrans->>DataTrans: atomic_store(&wifi_operation_acknowledged, 0)
                DataTrans->>Acquisition: start_adc_sampling()
            end
        end
    else mode == 1 (Single trigger)
        loop Until client disconnects
            DataTrans->>DataTrans: current_state = gpio_get_level(SINGLE_INPUT_PIN)
            
            alt Edge detected (based on trigger_edge)
                DataTrans->>DataTrans: Calculate precise timing
                DataTrans->>Acquisition: acquire_data() [calls adc_continuous_read()]
                activate Acquisition
                Acquisition-->>DataTrans: Data buffer
                deactivate Acquisition
                DataTrans->>Client: non_blocking_send() buffer
            end
        end
    end
    
    Client->>DataTrans: Disconnect
    DataTrans->>Acquisition: stop_adc_sampling()
    activate Acquisition
    Acquisition->>Acquisition: adc_continuous_stop()
    Acquisition->>Acquisition: vTaskDelay() for hardware stability
    Acquisition->>Acquisition: adc_continuous_deinit()
    Acquisition->>Acquisition: atomic_store(&adc_is_running, false)
    Acquisition-->>DataTrans: ADC stopped
    deactivate Acquisition
    
    DataTrans->>DataTrans: safe_close(client_sock)
    deactivate DataTrans